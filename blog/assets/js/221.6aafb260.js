(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{712:function(s,t,a){"use strict";a.r(t);var n=a(22),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs-语法特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-语法特性"}},[s._v("#")]),s._v(" nodejs 语法特性")]),s._v(" "),a("p",[s._v("虽然 nodejs 也是用了 JS 标准的语法（以及 ES6 的语法规范），但是肯定有一些地方和前端 JS 不一样。因此这里简单的总结一下，只说重点，不再从头说起。")]),s._v(" "),a("h2",{attrs:{id:"和浏览器-js-的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和浏览器-js-的不同"}},[s._v("#")]),s._v(" 和浏览器 JS 的不同")]),s._v(" "),a("p",[s._v("前端说的 JS ，即浏览器端运行的 JS 其实是两个标准的合并。只有这俩合起来，在实际开发中才能使用，否则：例如只讲第一个标准的话，那只能写 demo 演示一下，没法实际用。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("ECMA 262 标准")]),s._v(" —— 即 JS 的基本语法，如何定义变量、变量类型、原型、作用域、异步等")]),s._v(" "),a("li",[a("strong",[s._v("W3C 的 Web-API 标准")]),s._v(" —— 包括 BOM DOM 操作、ajax 、存储等")])]),s._v(" "),a("p",[s._v("而在 "),a("strong",[s._v("nodejs 中，第一个标准，即 ECMA 262 标准继续使用，也就是 JS 基本语法继续使用")]),s._v("，JS 原型、异步、闭包等特性也继续保持。但是第二个标准就没法继续使用过了，例如"),a("code",[s._v("window")]),s._v(" "),a("code",[s._v("document")]),s._v(" "),a("code",[s._v("location")]),s._v(" "),a("code",[s._v("getElementById")]),s._v("等，这些就都没有了，因为 nodejs 是 server 端的，根本没有浏览器的那些特性。但是 "),a("strong",[s._v("nodejs 中定义了自己在 server 端特有的 API")]),s._v("，例如"),a("code",[s._v("http")]),s._v(" "),a("code",[s._v("fs")]),s._v(" "),a("code",[s._v("Stream")]),s._v(" "),a("code",[s._v("os")]),s._v("等，这些都是 server 端才有的特性。")]),s._v(" "),a("p",[s._v("总结一下，就两点")]),s._v(" "),a("ul",[a("li",[s._v("继续使用 ECMA 262 标准，即 JS 的基本语法")]),s._v(" "),a("li",[s._v("定义了 server 端特性的 API ，如"),a("code",[s._v("http")]),s._v(" "),a("code",[s._v("fs")]),s._v("等")])]),s._v(" "),a("h2",{attrs:{id:"模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[s._v("#")]),s._v(" 模块化")]),s._v(" "),a("p",[s._v("nodejs 使用 CommonJS 模块化规范，其中会用到"),a("code",[s._v("require")]),s._v(" "),a("code",[s._v("module.exports")]),s._v("关键字。归总一下，一共有三种引用场景：")]),s._v(" "),a("h3",{attrs:{id:"引用核心模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用核心模块"}},[s._v("#")]),s._v(" 引用核心模块")]),s._v(" "),a("p",[s._v("比较简单，即引用 nodejs 默认提供的核心 API 。例如:")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" os "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'os'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"引用-npm-安装的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用-npm-安装的模块"}},[s._v("#")]),s._v(" 引用 npm 安装的模块")]),s._v(" "),a("p",[s._v("npm 安装第三发模块时，可通过加入"),a("code",[s._v("--save")]),s._v("或"),a("code",[s._v("--save-dev")]),s._v("，这样安装之后模块名称会保存在"),a("code",[s._v("package.json")]),s._v("中。然后即可根据模块名称引用刚刚安装的模块，常见的有：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" lodash "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lodash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" React "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" webpack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'webpack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"引用自定义的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用自定义的模块"}},[s._v("#")]),s._v(" 引用自定义的模块")]),s._v(" "),a("p",[s._v("以上"),a("code",[s._v("require")]),s._v("的时候都是输入名称，也可以输入相对路径来引用自己定义的模块。自己新建一个文件"),a("code",[s._v("a.js")]),s._v("，内容为")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("然后新建一个文件"),a("code",[s._v("b.js")]),s._v("（和"),a("code",[s._v("a.js")]),s._v("同目录），内容为")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./a.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引用自定义模块 a.js")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[a("code",[s._v("node b.js")]),s._v("，即可看到效果。")]),s._v(" "),a("h3",{attrs:{id:"附-解答一个疑问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附-解答一个疑问"}},[s._v("#")]),s._v(" 附：解答一个疑问")]),s._v(" "),a("p",[s._v("这里有一个问题，按照 JS 语法来说，以上代码中 "),a("code",[s._v("require")]),s._v(" "),a("code",[s._v("module.exports")]),s._v(" 都是未定义的变量，应该会报错的。其实，"),a("strong",[s._v("在编译过程中，nodejs 会获取这段代码，然后进行一个函数封装")]),s._v("，然后变成这样，问题就解决了。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上面提出的未定义的变量，都是函数的参数，是执行时被传入的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同理的还是 __filename, __dirname")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" __dirname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("requre")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("exports")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("这就算是一个意外收获了，不过遇到问题还是要多考虑一下原型。")]),s._v(" "),a("h2",{attrs:{id:"异步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[s._v("#")]),s._v(" 异步")]),s._v(" "),a("p",[s._v("这里提出“异步”，并不是要讲什么新内容，而是着重提示：接下来的讲解，会用到很多异步的知识，因此异步必须要掌握全面。提醒一下，还不了解的同学尽快去补充学习：")]),s._v(" "),a("ul",[a("li",[s._v("异步和同步的区别")]),s._v(" "),a("li",[s._v("异步和单线程")]),s._v(" "),a("li",[s._v("event loop")]),s._v(" "),a("li",[s._v("callback 方式")]),s._v(" "),a("li",[s._v("Promise")]),s._v(" "),a("li",[s._v("async/await")])])])}),[],!1,null,null,null);t.default=e.exports}}]);