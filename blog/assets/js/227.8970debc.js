(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{718:function(s,e,r){"use strict";r.r(e);var t=r(22),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,r=s._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),r("h2",{attrs:{id:"关于数据存储-如-mysql-redis-等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于数据存储-如-mysql-redis-等"}},[s._v("#")]),s._v(" 关于数据存储（如 mysql redis 等）")]),s._v(" "),r("p",[s._v("npm 中也早就有了 nodejs 操作 mysql redis 等的库，可以直接拿来使用。不过考虑目前 nodejs 主要的应用场景，直接操作 mysql redis 的机会不多。")]),s._v(" "),r("p",[s._v("nodejs 目前属于 web server 的“表层”，即最接近前端的那部分，前后端代码同构就是这部分。nodejs 从一些线程的 server 中得到数据，然后直接渲染出 html 直接返回。至于如何从 mysql redis 中获取数据，一般不会由 nodejs 操作，而是其他 server 操作。现在比较经典的结构是"),r("code",[s._v("前端 -> nodejs -> 数据 server（如 PHP java）")]),s._v("。")])])}),[],!1,null,null,null);e.default=a.exports}}]);