(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{734:function(t,a,v){"use strict";v.r(a);var _=v(22),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"什么是算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是算法"}},[t._v("#")]),t._v(" 什么是算法？")]),t._v(" "),v("h3",{attrs:{id:"算法的定义-algorithm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法的定义-algorithm"}},[t._v("#")]),t._v(" 算法的定义（Algorithm）")]),t._v(" "),v("ul",[v("li",[t._v("一个有限指令集，每条指令的描述不依赖于语言。")]),t._v(" "),v("li",[t._v("接收一些输入（有些情况下不需要输入）。")]),t._v(" "),v("li",[t._v("产生输出。")]),t._v(" "),v("li",[t._v("一定在有限步骤之后终止。")])]),t._v(" "),v("h3",{attrs:{id:"通俗理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通俗理解"}},[t._v("#")]),t._v(" 通俗理解")]),t._v(" "),v("ul",[v("li",[t._v("Algorithm 这个单词本意就是解决问题的办法/步骤逻辑。")]),t._v(" "),v("li",[t._v("数据结构的实现，离不开算法。")])]),t._v(" "),v("h3",{attrs:{id:"算法案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法案例"}},[t._v("#")]),t._v(" 算法案例")]),t._v(" "),v("p",[t._v("假如上海和杭州之间有一条高架线，高架线长度是 1,000,000 米，有一天高架线中有其中一米出现了故障，请你想出一种算法，可以快速定位到处问题的地方。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("线性查找")]),t._v(" "),v("ul",[v("li",[t._v("从上海的起点开始一米一米的排查，最终一定能找到出问题的线段。")]),t._v(" "),v("li",[t._v("但是如果线段在另一头，我们需要排查 1,000,000 次，这是最坏的情况，平均需要 500,000 次。")])])]),t._v(" "),v("li",[v("p",[t._v("二分查找")]),t._v(" "),v("ul",[v("li",[t._v("从中间位置开始排查，看一下问题出在上海到中间位置，还是中间到杭州的位置。")]),t._v(" "),v("li",[t._v("查找对应的问题后，再从中间位置分开，重新锁定一般的路程。")]),t._v(" "),v("li",[t._v("最坏的情况，需要多少次可以排查完呢? 最坏的情况是 20 次就可以找到出问题的地方。")]),t._v(" "),v("li",[t._v("怎么计算出来的呢? log(1000000, 2)，以 2 位底，1000000 的对数 ≈ 20。")])])])]),t._v(" "),v("p",[t._v("结论："),v("br"),t._v("\n你会发现，解决问题的办法有很多，但是好的算法对比于差的算法，效率天壤之别。")]),t._v(" "),v("h2",{attrs:{id:"排序算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#排序算法"}},[t._v("#")]),t._v(" 排序算法")]),t._v(" "),v("p",[t._v("排序算法是《数据结构与算法》中最基本的算法之一。")]),t._v(" "),v("p",[t._v("排序算法可以分为内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。常见的内部排序算法有："),v("strong",[t._v("插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序")]),t._v("等。用一张图概括：")]),t._v(" "),v("p",[v("img",{staticClass:"lazy",attrs:{alt:"十大经典排序算法 概览截图","data-src":"https://fastly.jsdelivr.net/gh/songlitao/picgo/resource/blog/assets/imgs/algorithm/00-01.png",loading:"lazy"}})]),t._v(" "),v("p",[t._v("详细说明：")]),t._v(" "),v("p",[v("img",{staticClass:"lazy",attrs:{alt:"img","data-src":"https://fastly.jsdelivr.net/gh/songlitao/picgo/resource/blog/assets/imgs/algorithm/00-02.png",loading:"lazy"}})]),t._v(" "),v("h3",{attrs:{id:"时间复杂度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),v("ol",[v("li",[t._v("平方阶 (O(n2)) 排序\n各类简单排序：直接插入、直接选择和冒泡排序。")]),t._v(" "),v("li",[t._v("线性对数阶 (O(nlog2n)) 排序\n快速排序、堆排序和归并排序；")]),t._v(" "),v("li",[t._v("O(n1+§)) 排序，§ 是介于 0 和 1 之间的常数。\n希尔排序")]),t._v(" "),v("li",[t._v("线性阶 (O(n)) 排序\n基数排序，此外还有桶、箱排序。")])]),t._v(" "),v("h3",{attrs:{id:"稳定性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#稳定性"}},[t._v("#")]),t._v(" 稳定性")]),t._v(" "),v("p",[t._v("稳定的排序算法：冒泡排序、插入排序、归并排序和基数排序。")]),t._v(" "),v("p",[t._v("不是稳定的排序算法：选择排序、快速排序、希尔排序、堆排序。")]),t._v(" "),v("h3",{attrs:{id:"名词解释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#名词解释"}},[t._v("#")]),t._v(" 名词解释")]),t._v(" "),v("p",[v("strong",[t._v("n")]),t._v("：数据规模")]),t._v(" "),v("p",[v("strong",[t._v("k")]),t._v("：“桶”的个数")]),t._v(" "),v("p",[v("strong",[t._v("In-place")]),t._v("：占用常数内存，不占用额外内存")]),t._v(" "),v("p",[v("strong",[t._v("Out-place")]),t._v("：占用额外内存")]),t._v(" "),v("p",[v("strong",[t._v("稳定性")]),t._v("：排序后 2 个相等键值的顺序和排序之前它们的顺序相同")]),t._v(" "),v("h2",{attrs:{id:"十大经典排序算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#十大经典排序算法"}},[t._v("#")]),t._v(" 十大经典排序算法")]),t._v(" "),v("ul",[v("li",[v("RouterLink",{attrs:{to:"/pages/a44678/"}},[t._v("1、冒泡排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/97ba13/"}},[t._v("2、选择排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/edee5d/"}},[t._v("3、插入排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/4a653b/"}},[t._v("4、希尔排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/28e18c/"}},[t._v("5、归并排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/ed4afe/"}},[t._v("6、快速排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/a33d45/"}},[t._v("7、堆排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/d3f0fb/"}},[t._v("8、计数排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/f4c976/"}},[t._v("9、桶排序")])],1),t._v(" "),v("li",[v("RouterLink",{attrs:{to:"/pages/a1f364/"}},[t._v("10、基数排序")])],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);